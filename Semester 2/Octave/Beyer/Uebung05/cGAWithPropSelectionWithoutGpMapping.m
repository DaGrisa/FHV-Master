function[stats] = cGAWithPropSelectionWithoutGpMapping(mu, length, pc, pm, fStop, fun, funopt = [])  genoTypes = cell(1,mu);  parents = cell(1,mu);  g = 0;  for j=1:mu    genoTypes(j) = InitializeGenoType(length);  end    do    fitnessSum = 0;        for j=1:mu      fitness = feval(fun, cell2mat(genoTypes(j)), funopt);      fitnessValues(j) = fitness;      fitnessSum = fitnessSum + fitness;    end    meanFitness = fitnessSum / mu;        for j=1:mu       probabilities(j) = fitnessValues(j)/fitnessSum;    end        for j=1:2:mu      indexOne = RouletteWheelSelection(probabilities);      selOne = genoTypes(indexOne);      indexTwo = RouletteWheelSelection(probabilities);      selTwo = genoTypes(indexTwo);            if(rand(1) < pc)        [parentOne, parentTwo] = OnePointCrossover(selOne, selTwo);      else        parentOne = selOne;        parentTwo = selTwo;      end      parents(j) = parentOne;      parents(j+1) = parentTwo;    end      for j=1:mu       genoTypes(j) = MutateGenoType(cell2mat(parents(j)), pm);    end        g = g + 1;    stats.meanFitness(g) = meanFitness;  until(meanFitness >= fStop)endfunction[x] = InitializeGenoType(length)    for j=1:length    random = rand(1);    if (random <= 0.5)      x(j) = 0;    else      x(j) = 1;    end  endendfunction[z] = MapGenoTypeToPhenoType(x)  N = length(x);  y = 1:N;  z = sum(x*2(N-i));endfunction[index] = RouletteWheelSelection(probabilities)    random = rand(1);  cummProbabilities = 0;  index = 0;    do    index = index + 1;    cummProbabilities = cummProbabilities + probabilities(index);  until(cummProbabilities > random)  endfunction[vecOne, vecTwo] = OnePointCrossover(yOne, yTwo)  N = length(yOne);    indexToCut = randi(N);    vecOne = yOne(1:indexToCut);  vecOne = [vecOne ; yTwo(indexToCut+1:N)];    vecTwo = yTwo(1:indexToCut);  vecTwo = [vecTwo ; yOne(indexToCut+1:N)];endfunction[x] = MutateGenoType(x, probability)    N = length(x);    for i=1:N    random = rand(1);    if (random <= probability)      if (x(i) == 1)        x(i) = 0;      elseif (x(i) == 0)        x(i) = 1;      end    end  endend