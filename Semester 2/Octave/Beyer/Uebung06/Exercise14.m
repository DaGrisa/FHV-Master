% Aufgabe 14 %%%%%%%%%%%%%%%clear;warning ("off", "Octave:divide-by-zero");grammar.operationTerminals = cellstr(['-';'+';'*';'/']);grammar.preOperationTerminals = cellstr(['sin';'cos';'exp';'log';'sqrt']);grammar.numbers = cellstr(['0';'1';'2';'3';'4';'5';'6';'7';'8';'9']);grammar.expressions = cellstr(['expression;operation;expression';              '(;expression;operation;expression;)';              'preoperation;(;expression;)';              'number';              'variable']);grammar.variables = cellstr(['x']); referenceFunction = 'Testfunction';xValues = [-1;-0.9;-0.8;-0.7;-0.6;-0.5;-0.4;-0.3;-0.2;-0.1;0;0.1;0.2;0.3;0.4;0.5;0.6;0.7;0.8;0.9;1];        maxRecursionDepth = 25;genomeLength = 128;populationSize = 20;crossoverProbability = 0.7;mutationProbability = 0.1;tournamentSize = 6;maxGenerations = 20;[resultCode, overallBestCode] = GeneticProgrammingGrammaticalEvolution(grammar, genomeLength, maxRecursionDepth, referenceFunction, xValues, populationSize, crossoverProbability, mutationProbability, tournamentSize, maxGenerations)% plottingfigurefplot('sin(5*x)^2 + sin(2*x)', [-1,1], "Color", "r");hold onfplot(strcat('1*',strvcat(resultCode)), [-1,1], "Color", "b");hold onfplot(strcat('1*',strvcat(overallBestCode)), [-1,1], "Color", "g");legend("Original=sin(5*x)^2 + sin(2*x)", strcat("Result=",strvcat(resultCode)), strcat("Overall Best=",strvcat(overallBestCode)));title(strcat("Genetic Programming with Genertical Evolution, ", num2str(maxGenerations)," generations"));