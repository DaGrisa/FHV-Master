% Aufgabe 3 %%%%%%%%%%%%%%set (0, "defaultaxesfontname", "Helvetica")set (0, "defaultaxesfontsize", 14)set (0, "defaulttextfontname", "Helvetica")set (0, "defaulttextfontsize", 14) dimensions = 40;yParent = ones(dimensions, 1);sigmaParent = 1;sigmaStop = 0;offspringPopulationSize = 10;parentPopulationSize = 3;searchPath = ones(dimensions, 1);searchPathConstant = 1/sqrt(dimensions);attenuation = sqrt(dimensions);maxGenerations = 4000;desiredFitness = 0;tau = (2*dimensions)^(-1/2);ellipsoid = Ellipsoid([1;1])ySquareHistorySA = [];ySquareHistoryCSA = [];% TODO Fitness-DynamikfitnessHistoryIterSA = [];fitnessHistoryIterCSA = [];% TODO Sigma-DynamiksigmaHistoryIterSA = [];sigmaHistoryIterCSA = [];for i = 1:1  [fitnessHistorySA, sigmaHistorySA, fitnessParent, generationCount, functionEvaluationCount, fitnessHistoryFunctionEvaluation, sigmaNormHistorySA, y2HistorySA] = RecombinationSelfAdaptionES(yParent, sigmaParent, sigmaStop, offspringPopulationSize, parentPopulationSize, tau, 'Ellipsoid1', maxGenerations, desiredFitness);  [fitnessHistoryCSA, sigmaHistoryCSA, fitnessParent, generationCount, functionEvaluationCount, fitnessHistoryFunctionEvaluation, sigmaNormHistoryCSA, y2HistoryCSA] = CSAES(yParent, sigmaParent, sigmaStop, offspringPopulationSize, parentPopulationSize, 'Ellipsoid1', searchPath, searchPathConstant, attenuation, maxGenerations);    ySquareHistorySA = [ySquareHistorySA ; y2HistorySA'];  ySquareHistoryCSA = [ySquareHistoryCSA ; y2HistoryCSA'];endySquareMeanCSA = MeanCalc(ySquareHistoryCSA);ySquareMeanCSASize = size(ySquareMeanCSA,1)ySquareMeanSA = MeanCalc(ySquareHistorySA);ySquareMeanSASize = size(ySquareMeanSA,1)figure("1");semilogy(ySquareMeanCSA,'b-');hold onsemilogy(ySquareMeanSA,'r-');legend("CSA", "SA");title("Exercise 3 - y^2 Dynamics, N=40, 10 Runs");ylabel("y^2 Dynamics");xlabel("Generation number");% TODO Meta - CSA - Vergleichs