% Aufgabe 1 %%%%%%%%%%%%%%dimensions = 100;yParent = ones(dimensions, 1);sigmaParent = 1;sigmaChangeFactor = 1.2;offspringPopulationSize = 100;parentPopulationSize = 14;maxGenerations = 1000000;desiredFitness = 10^(-10);isolationTime = 1;[sigmaParentMeta, generationCountMeta, fitnessHistoryMeta, sigmaHistoryMeta, functionEvaluationCount] = MetaES(yParent, sigmaParent, sigmaChangeFactor, parentPopulationSize, offspringPopulationSize, isolationTime, maxGenerations, desiredFitness, 'Sphere');sigmaParentMetagenerationCountMetafitnessHistoryMeta(end)functionEvaluationCountset (0, "defaultaxesfontname", "Helvetica")set (0, "defaultaxesfontsize", 14)set (0, "defaulttextfontname", "Helvetica")set (0, "defaulttextfontsize", 14) dimensions = 40;yParent = ones(dimensions, 1);offspringPopulationSize = 10;parentPopulationSize = 3;isolationTime = 1;[sigmaParentMeta, generationCountMeta, fitnessHistoryMeta1, sigmaHistoryMeta, functionEvaluationCount, fitnessHistoryFunctionEvaluation1] = MetaES(yParent, sigmaParent, sigmaChangeFactor, parentPopulationSize, offspringPopulationSize, isolationTime, maxGenerations, desiredFitness, 'Sphere');isolationTime = 2;[sigmaParentMeta, generationCountMeta, fitnessHistoryMeta2, sigmaHistoryMeta, functionEvaluationCount, fitnessHistoryFunctionEvaluation2] = MetaES(yParent, sigmaParent, sigmaChangeFactor, parentPopulationSize, offspringPopulationSize, isolationTime, maxGenerations, desiredFitness, 'Sphere');isolationTime = 5;[sigmaParentMeta, generationCountMeta, fitnessHistoryMeta5, sigmaHistoryMeta, functionEvaluationCount, fitnessHistoryFunctionEvaluation5] = MetaES(yParent, sigmaParent, sigmaChangeFactor, parentPopulationSize, offspringPopulationSize, isolationTime, maxGenerations, desiredFitness, 'Sphere');isolationTime = 10;[sigmaParentMeta, generationCountMeta, fitnessHistoryMeta10, sigmaHistoryMeta, functionEvaluationCount, fitnessHistoryFunctionEvaluation10] = MetaES(yParent, sigmaParent, sigmaChangeFactor, parentPopulationSize, offspringPopulationSize, isolationTime, maxGenerations, desiredFitness, 'Sphere');sigmaStop = 0;tau = (2*dimensions)^(-1/2);[fitnessHistory, sigmaHistory, fitnessParent, generationCount, functionEvaluationCount, fitnessHistoryFunctionEvaluation] = RecombinationSelfAdaptionES(yParent, sigmaParent, sigmaStop, offspringPopulationSize, parentPopulationSize, tau, 'Sphere', maxGenerations, desiredFitness);figure("1");semilogy(fitnessHistoryMeta1,'b-');hold onsemilogy(fitnessHistoryMeta2,'r-');hold onsemilogy(fitnessHistoryMeta5,'m-');hold onsemilogy(fitnessHistoryMeta10,'c-');hold onsemilogy(fitnessHistory,'g-');legend("Meta-ES \\gamma = 1","Meta-ES \\gamma = 2","Meta-ES \\gamma = 5","Meta-ES \\gamma = 10","Recombination-Self Adaption-ES");title("Exercise 1 - MetaES - Fitness Dynamics - (3/3, 10), N=40");ylabel("Fitness Value");xlabel("Generation number");figure("2");semilogy(fitnessHistoryFunctionEvaluation1,'b-');hold onsemilogy(fitnessHistoryFunctionEvaluation2,'r-');hold onsemilogy(fitnessHistoryFunctionEvaluation5,'m-');hold onsemilogy(fitnessHistoryFunctionEvaluation10,'c-');hold onsemilogy(fitnessHistoryFunctionEvaluation,'g-');legend("Meta-ES \\gamma = 1","Meta-ES \\gamma = 2","Meta-ES \\gamma = 5","Meta-ES \\gamma = 10","Recombination-Self Adaption-ES");title("Exercise 1 - MetaES - Fitness Dynamics - (3/3, 10), N=40");ylabel("Fitness Value");xlabel("# Function Evaluations");